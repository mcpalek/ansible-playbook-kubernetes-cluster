- name: Ensure dependencies are installed.
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg2
      - software-properties-common
    state: present

- name: Update cache
  ansible.builtin.apt:
    update_cache: true
  when:
    - ansible_distribution in ["Debian", "Ubuntu"]

- name: Add Docker GPG key
  ansible.builtin.apt_key:
    url: "https://download.docker.com/linux/ubuntu/gpg"
    state: present

- name: Add Docker repository
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/{{ ansible_system | lower }}/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable
    state: present

- name: Install the latest version of Docker Engine and containerd on Ubuntu
  ansible.builtin.package:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: present

- name: Add keyrings folder to Ubuntu 20.04
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'
  when:
    - ansible_distribution in ["Debian", "Ubuntu"] and ansible_distribution_version <= "22.04"

- name: Check if Kubernetes repo keyring exists
  ansible.builtin.stat:
    path: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  register: kubernetes_keyring

- name: Add Kubernetes repo keyring if missing
  ansible.builtin.shell: >
    curl -fsSL https://pkgs.k8s.io/core:/stable:/{{ repo_version }}/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  when: not kubernetes_keyring.stat.exists

- name: Check if Kubernetes sources.list entry exists
  ansible.builtin.shell: |
   ls /etc/apt/sources.list.d | grep -q kubernetes.list
  register: kubernetes_sources_check
  ignore_errors: true

- name: Set fact if Kubernetes source entry exists
  ansible.builtin.set_fact:
    kubernetes_source_exists: "{{ kubernetes_sources_check.rc == 0 }}"

- name: Add Kubernetes Repo to Debian/Ubuntu
  ansible.builtin.shell: |
    echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/{{ repo_version }}/deb/ /' | tee /etc/apt/sources.list.d/kubernetes.list
  when:
    - ansible_distribution in ["Debian", "Ubuntu"]
    - not kubernetes_source_exists

- name: Update apt cache for Kubernetes repo
  ansible.builtin.apt:
    update_cache: true
  when:
    - ansible_distribution in ["Debian", "Ubuntu"]

- name: Check if kubelet is installed
  ansible.builtin.command: dpkg -s kubelet
  register: kubelet_check
  ignore_errors: true

- name: Check if kubeadm is installed
  ansible.builtin.command: dpkg -s kubeadm
  register: kubeadm_check
  ignore_errors: true

- name: Check if kubectl is installed
  ansible.builtin.command: dpkg -s kubectl
  register: kubectl_check
  ignore_errors: true


- name: Install Kubernetes on Debian/Ubuntu
  ansible.builtin.apt:
    name:
      - kubelet={{ ubuntu_kubernetes_version }}
      - kubeadm={{ ubuntu_kubernetes_version }}
      - kubectl={{ ubuntu_kubernetes_version }}
    state: present
  when:
    - kubelet_check.rc != 0
    - kubeadm_check.rc != 0
    - kubectl_check.rc != 0

- name: Reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: true

- name: Restart docker
  ansible.builtin.systemd:
    name: docker
    state: restarted
    enabled: true

- name: Enable kubelet
  ansible.builtin.systemd:
    name: kubelet
    enabled: true

- name: Ensure containerd is installed.
  ansible.builtin.package:
    name: containerd.io
    state: present

- name: Check if containerd config file exists
  ansible.builtin.stat:
    path: /etc/containerd/config.toml
  register: containerd_config

- name: Use systemd Cgroup driver for containerd
  shell: |
    containerd config default > /etc/containerd/config.toml
    sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml
  when: containerd_config.stat.exists


- name: Restart containerd
  ansible.builtin.systemd:
    name: containerd
    state: restarted
